{
  "name": "frontend",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "serve": "vue-cli-service serve",
    "build": "vue-cli-service build",
    "lint": "vue-cli-service lint",
    "start": "npm run serve"
  },
  "dependencies": {
    "@walletconnect/web3-provider": "^1.7.8",
    "@web3auth/web3auth": "^1.0.1",
    "bootstrap": "^4.6.0",
    "bootstrap-vue": "^2.21.2",
    "magic-sdk": "^8.1.1",
    "moralis": "^1.8.0",
    "nes.css": "^2.3.0",
    "v-tooltip": "^2.1.3",
    "vue": "2.6.12",
    "vue-dragula": "^1.3.1",
    "vue-router": "^3.5.1",
    "vuex": "^3.6.2",
    "web3": "^1.3.4"
  },
  "devDependencies": {
    "@types/lodash": "^4.14.182",
    "@typescript-eslint/eslint-plugin": "^4.26.1",
    "@typescript-eslint/parser": "^4.26.1",
    "@vue/cli": "^4.5.12",
    "@vue/cli-plugin-babel": "~4.5.0",
    "@vue/cli-plugin-eslint": "~4.5.0",
    "@vue/cli-plugin-typescript": "^4.5.12",
    "@vue/cli-service": "~4.5.0",
    "@vue/eslint-config-typescript": "^5.0.2",
    "babel-eslint": "^10.1.0",
    "eslint": "^6.7.2",
    "eslint-plugin-vue": "^6.2.2",
    "typescript": "~4.1.5",
    "vue-template-compiler": "2.6.12"
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "node": true
    },
    "extends": [
      "plugin:vue/essential",
      "eslint:recommended",
      "@vue/typescript"
    ],
    "parserOptions": {
      "project": [
        "tsconfig.json"
      ],
      "parser": "@typescript-eslint/parser"
    },
    "rules": {
      "eqeqeq": "error",
      "max-len": [
        "error",
        {
          "ignorePattern": "//",
          "code": 160
        }
      ],
      "no-debugger": "error",
      "no-eval": "error",
      "no-fallthrough": "error",
      "new-parens": "error",
      "no-caller": "error",
      "no-cond-assign": "error",
      "no-throw-literal": "error",
      "no-trailing-spaces": "error",
      "no-undef-init": "error",
      "no-unsafe-finally": "error",
      "no-unused-labels": "error",
      "no-var": "error",
      "object-shorthand": "error",
      "prefer-const": "error",
      "radix": "error",
      "use-isnan": "error",
      "quote-props": [
        "error",
        "as-needed"
      ],
      "indent": "off",
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-use-before-define": "error",
      "@typescript-eslint/ban-types": [
        "error",
        {
          "types": {
            "Object": {
              "message": "Avoid using the `Object` type. Did you mean `object`?"
            },
            "Function": {
              "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
            },
            "Boolean": {
              "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
            },
            "Number": {
              "message": "Avoid using the `Number` type. Did you mean `number`?"
            },
            "String": {
              "message": "Avoid using the `String` type. Did you mean `string`?"
            },
            "Symbol": {
              "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
            }
          }
        }
      ],
      "@typescript-eslint/type-annotation-spacing": "error",
      "@typescript-eslint/unified-signatures": "error",
      "@typescript-eslint/consistent-type-assertions": "error",
      "@typescript-eslint/consistent-type-definitions": "error",
      "@typescript-eslint/dot-notation": "error",
      "@typescript-eslint/no-empty-interface": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-namespace": "error",
      "@typescript-eslint/no-unused-expressions": "error",
      "@typescript-eslint/indent": [
        "error",
        2,
        {
          "FunctionDeclaration": {
            "parameters": "first"
          },
          "FunctionExpression": {
            "parameters": "first"
          }
        }
      ],
      "@typescript-eslint/quotes": [
        "error",
        "single"
      ],
      "@typescript-eslint/semi": [
        "error",
        "always"
      ]
    }
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead"
  ]
}
